<?xml version="1.0" encoding="UTF-8"?>
<project
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xmlns="http://maven.apache.org/POM/4.0.0"
        xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

    <modelVersion>4.0.0</modelVersion>
    <groupId>org.dancres</groupId>
    <artifactId>blitz-javaspaces</artifactId>
    <version>2.1.5</version>
    <packaging>jar</packaging>

    <name>Blitz JavaSpaces</name>
    <description>
        A high-quality, persistent (if you want), open-source JavaSpaces implementation.
        Pure Java - no native libraries required.
        No External Database Requirement - just configure and go.
        JINI 2.1 support - with backward compatibility to JINI 2.0.x.
        JavaSpace05 support.
    </description>

    <!-- TODO: Move across serviceUI files etc, e.g (from original ant project):
    <copy todir="${build}/org/dancres/blitz/serviceui"
              file="${src}/org/dancres/blitz/serviceui/blitz.htm"/>
    <copy todir="${build}/org/dancres/blitz/tools/dash/images">
      <fileset dir="${src}/org/dancres/blitz/tools/dash/images">
      </fileset>
    </copy>
    -->

    <developers>
        <developer>
            <name>Dan Creswell</name>
            <email>dan.creswell@gmail.com</email>
            <roles>
                <role>Architect</role>
                <role>Developer</role>
            </roles>
        </developer>
        <developer>
            <name>Dawid Loubser</name>
            <email>dawid@travellinck.com</email>
            <organization>Travellinck International</organization>
            <roles>
                <role>Packager</role>
            </roles>
        </developer>
    </developers>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    </properties>

    <build>
        <plugins>
            <!-- Java Compilation -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>2.3.2</version>
                <configuration>
                    <source>1.6</source>
                    <target>1.6</target>
                    <fork>true</fork>
                    <maxmem>1024m</maxmem>
                </configuration>
            </plugin>
            
            <!-- Unit testing -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.9</version>
            </plugin>

            <!-- Create separate JARs for Blitz API, Implementation, Stats, etc -->
            <plugin>
                <artifactId>maven-rio-plugin</artifactId>
                <version>5.0-SNAPSHOT</version>
                <executions>
                    <execution>
                        <id>blitz-dl</id>
                        <goals>
                            <goal>classdepandjar</goal>
                        </goals>
                        <configuration>
                            <createJar>
                                <classifier>dl</classifier>
                                <ins>
                                    <in>com.go</in>
                                    <in>org.dancres</in>
                                    <in>net.jini</in>
                                    <in>org.jini</in>
                                    <in>com.sun.jini</in>
                                </ins>
                                <outs>
                                    <out>net.jini.core</out>
                                    <out>net.jini.activation</out>
                                    <out>net.jini.config</out>
                                    <out>net.jini.constraint</out>
                                    <out>net.jini.export</out>
                                    <out>net.jini.id</out>
                                    <out>net.jini.iiop</out>
                                    <out>net.jini.io</out>
                                    <out>net.jini.jeri</out>
                                    <out>net.jini.jrmp</out>
                                    <out>net.jini.loader</out>
                                    <out>net.jini.security</out>
                                    <out>net.jini.url</out>
                                    <out>com.sun.jini.discovery</out>
                                </outs>
                                <topclasses>
                                    <topclass>org.dancres.blitz.remote.BlitzProxy</topclass>
                                    <topclass>org.dancres.blitz.remote.BlitzServiceImpl_Stub</topclass>
                                    <topclass>org.dancres.blitz.remote.LeaseImpl</topclass>
                                    <topclass>org.dancres.blitz.notify.SpaceNotifyUID</topclass>
                                    <topclass>org.dancres.blitz.remote.txn.SpaceTxnUID</topclass>
                                    <topclass>org.dancres.blitz.remote.txn.TxnMgrProxy</topclass>
                                    <topclass>org.dancres.blitz.notify.AvailabilityEventImpl</topclass>
                                    <topclass>org.dancres.blitz.SpaceEntryUID</topclass>
                                    <topclass>org.dancres.blitz.oid.UIDImpl</topclass>
                                    <topclass>org.dancres.blitz.remote.AdminProxy</topclass>
                                    <topclass>org.dancres.blitz.remote.TxnParticipantProxy</topclass>
                                    <topclass>org.dancres.blitz.remote.ProxyVerifier</topclass>
                                    <topclass>org.dancres.blitz.remote.ConstrainableTxnParticipantProxy</topclass>
                                    <topclass>org.dancres.blitz.remote.ConstrainableBlitzProxy</topclass>
                                    <topclass>org.dancres.blitz.remote.ConstrainableLeaseImpl</topclass>
                                    <topclass>org.dancres.blitz.remote.ConstrainableAdminProxy</topclass>
                                    <topclass>org.dancres.blitz.remote.debug.TimingInvocationHandler</topclass>
                                    <topclass>org.dancres.blitz.remote.view.EntryViewUID</topclass>
                                </topclasses>
                            </createJar>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

        </plugins>
    </build>

    <dependencies>
        <!-- Jini Core -->
        <dependency>
            <groupId>net.jini</groupId>
            <artifactId>jsk-lib</artifactId>
            <version>2.1</version>
        </dependency>
        <dependency>
            <groupId>net.jini</groupId>
            <artifactId>jsk-dl</artifactId>
            <version>2.1</version>
        </dependency>
        <dependency>
            <groupId>net.jini</groupId>
            <artifactId>jsk-platform</artifactId>
            <version>2.1</version>
        </dependency>

        <!-- Sun Jini utilities -->
        <dependency>
            <groupId>com.sun.jini</groupId>
            <artifactId>sun-util</artifactId>
            <version>2.1</version>
        </dependency>


        <!-- Berkely DB Java Edition -->
        <dependency>
            <groupId>com.sleepycat</groupId>
            <artifactId>je</artifactId>
            <version>4.0.92</version>
        </dependency>

        <!-- Outrigger (JavaSpaces Reference Implementation) required for OutriggerViewer User Interface -->
        <dependency>
            <groupId>com.sun.jini</groupId>
            <artifactId>outrigger</artifactId>
            <version>2.1</version>
        </dependency>

        <dependency>
            <groupId>org.apache.mina</groupId>
            <artifactId>mina-core</artifactId>
            <version>1.1.7</version>
        </dependency>

        <dependency>
            <groupId>org.xsocket</groupId>
            <artifactId>xSocket</artifactId>
            <version>1.2.1</version>
        </dependency>

        <!-- TODO: Directly required?
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>1.6.4</version>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-jdk14</artifactId>
            <version>1.6.4</version>
        </dependency>
        -->

        <!-- Unit testing -->
        <dependency>
		    <groupId>junit</groupId>
		    <artifactId>junit</artifactId>
		    <version>4.8.1</version>
		    <scope>test</scope>
		</dependency>

        <!-- Integration testing -->
        <dependency>
            <groupId>org.rioproject</groupId>
            <artifactId>rio-test</artifactId>
            <version>5.0-SNAPSHOT</version>
            <scope>test</scope>
        </dependency>
        
    </dependencies>


    <repositories>
        <repository>
            <id>rio</id>
            <url>http://www.rio-project.org/maven2</url>
        </repository>
    </repositories>


    <profiles>
        <!-- Do integration testing on-demand only -->
        <profile>
            <id>integration-test</id>
            <activation>
                <activeByDefault>false</activeByDefault>
            </activation>
            <build>
                <plugins>
                    <!-- Integration test(s) -->
                    <plugin>
                        <artifactId>maven-failsafe-plugin</artifactId>
                        <version>2.9</version>
                        <configuration>
                            <forkMode>once</forkMode>
                            <argLine>-DRIO_TEST_ATTACH</argLine>
                        </configuration>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>integration-test</goal>
                                    <goal>verify</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
    
</project>